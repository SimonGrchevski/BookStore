{"version":3,"sources":["components/Categories.js","components/Header.js","redux/books/books.js","redux/middlewares.js","components/bookInfo.js","components/Completion.js","components/CurrentChapter.js","components/Book.js","components/utility.js","components/AddNewBook.js","components/Library.js","components/App.js","redux/main.js","redux/configureStore.js","index.js"],"names":["Categories","Header","className","id","to","addBook","removeBook","update","initialState","newBook","title","author","category","type","payload","completed","chapter","eraseBook","bookReducer","state","action","newState","JSON","parse","stringify","url","key","BookInfo","props","dispatch","useDispatch","onClick","e","a","fetch","method","body","item_id","eraseBookMiddleWare","target","Completion","CurrentChapter","Book","generateBooks","useSelector","Object","entries","books","map","k","v","AddNewBook","useState","setTitle","setAuthor","onSubmit","document","querySelector","value","preventDefault","reset","headers","Headers","newBookMiddleWare","uuidv4","placeholder","required","onChange","o","Library","useEffect","result","json","res","App","exact","path","reducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5d6cf293.chunk.js","sourcesContent":["import React from 'react';\n\nconst Categories = () => (\n  <div>\n    <p>Under Construction</p>\n  </div>\n);\n\nexport default Categories;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/header.css';\n\nconst Header = () => (\n  <header className=\"flex\">\n    <section className=\"flex header-section\">\n      <h1 id=\"logo\">BookStore</h1>\n      <ul className=\"nav-bar flex\">\n        <li><Link to=\"/\">Books</Link></li>\n        <li><Link to=\"/Categories\">Categories</Link></li>\n      </ul>\n      <section className=\"login-icon\" />\n    </section>\n  </header>\n);\n\nexport default Header;\n","const addBook = 'bookStore/books/ADD_BOOK';\nconst removeBook = 'bookStore/books/REMOVE_BOOK';\nconst update = 'bookStore/books/UPDATE_LIBRARY';\nconst initialState = {};\n\nconst bookReducer = (state = initialState, action) => {\n  if (action.type === addBook) {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState[action.payload.id] = [action.payload];\n    return newState;\n  } if (action.type === removeBook) {\n    const { [action.payload.id]: r, ...newState } = state;\n    return newState;\n  } if (action.type === update) {\n    return action.payload; // Should update the API state.\n  }\n  return state;\n};\n\nexport function updateLibrary(apiState) {\n  return {\n    type: update,\n    payload: apiState,\n  };\n}\n\nexport function newBook(title, author, category, id) {\n  return {\n    type: addBook,\n    payload: {\n      title,\n      author,\n      category,\n      completed: 0,\n      chapter: 'Introduction',\n      id,\n    },\n  };\n}\n\nexport function eraseBook(id) {\n  return {\n    type: removeBook,\n    payload: {\n      id,\n    },\n  };\n}\n\nexport default bookReducer;\n","import { updateLibrary, newBook, eraseBook } from './books/books';\n\nconst url = 'https://us-central1-bookstore-api-e63c8.cloudfunctions.net/bookstoreApi';\nconst key = 'AHBPUHELlRzJeWxjyULG';\n\nexport const updateMiddleware = () => async (dispatch) => {\n  const result = await fetch(`${url}/apps/${key}/books`);\n  const res = await result.json();\n  dispatch(updateLibrary(res));\n};\n\nexport const newBookMiddleWare = (title, author, category, id) => async (dispatch) => {\n  await fetch(`${url}/apps/${key}/books`, {\n    method: 'POST',\n    headers: new Headers({ 'Content-type': 'application/json; charset=UTF-8' }),\n    body: JSON.stringify({\n      item_id: id,\n      title,\n      category,\n      author,\n    }),\n  });\n  dispatch(newBook(title, author, category, id));\n};\n\nexport const eraseBookMiddleWare = (id) => async (dispatch) => {\n  await fetch(`${url}/apps/${key}/books/${id}`, {\n    method: 'DELETE',\n    body: JSON.stringify({\n      item_id: id,\n    }),\n  });\n  dispatch(eraseBook(id));\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { eraseBookMiddleWare } from '../redux/middlewares';\n\nconst BookInfo = (props) => {\n  const dispatch = useDispatch();\n  const {\n    title, author, category, id,\n  } = props;\n  return (\n    <article className=\"book-info-wrapper\">\n      <div className=\"book-info\">\n        <h5 className=\"book-category\">{category}</h5>\n        <h3 className=\"book-title\">{title}</h3>\n        <h5 className=\"book-author\">{author}</h5>\n      </div>\n      <div className=\"options-section\">\n        <ul className=\"flex options-ul\">\n          <li>Comments</li>\n          <li><button type=\"button\" className=\"btn\" id={id} onClick={(e) => dispatch(eraseBookMiddleWare(e.target.id))}>Remove</button></li>\n          <li><button type=\"button\" className=\"btn\">Edit</button></li>\n        </ul>\n      </div>\n    </article>\n  );\n};\n\nBookInfo.propTypes = {\n  title: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\nexport default BookInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Completion = (props) => {\n  const { completed } = props;\n  return (\n    <article className=\"completion-wrapper flex\">\n      <div className=\"background-wrapper\">\n        <div className=\"progress\" />\n      </div>\n      <div>\n        <p className=\"completed\">\n          {' '}\n          {completed}\n          {' '}\n          %\n        </p>\n        <p className=\"completed-p\">completed</p>\n      </div>\n    </article>\n  );\n};\n\nCompletion.propTypes = {\n  completed: PropTypes.number.isRequired,\n};\nexport default Completion;\n","import React from 'react';\nimport Proptypes from 'prop-types';\n\nconst CurrentChapter = (props) => {\n  const { chapter } = props;\n  return (\n    <article className=\"current-chapter-wrapper\">\n      <p>Current Chapter</p>\n      <span className=\"current-chapter\">{chapter}</span>\n      <button type=\"button\" className=\"update-progress\">UpdateProgress</button>\n    </article>\n  );\n};\n\nCurrentChapter.propTypes = {\n  chapter: Proptypes.string.isRequired,\n};\nexport default CurrentChapter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BookInfo from './bookInfo';\nimport Completion from './Completion';\nimport CurrentChapter from './CurrentChapter';\nimport '../styles/book.css';\n\nconst Book = (props) => {\n  const {\n    title, author,\n    category, completed,\n    chapter, id,\n  } = props;\n  return (\n    <section className=\"bookWrapper flex\">\n      <BookInfo\n        title={title}\n        author={author}\n        category={category}\n        id={id}\n      />\n      <Completion completed={completed} />\n      <CurrentChapter chapter={chapter} />\n    </section>\n  );\n};\n\nBook.propTypes = {\n  title: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  completed: PropTypes.number.isRequired,\n  chapter: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\nexport default Book;\n","import { useSelector } from 'react-redux';\nimport Book from './Book';\n\nconst generateBooks = () => {\n  const state = useSelector((state) => state);\n  return Object.entries(state.books).map(([k, v]) => (\n    <li key={k}>\n      <Book\n        title={v[0].title}\n        author={v[0].author || 'Author'}\n        category={v[0].category}\n        completed={32}\n        chapter=\"chapter\"\n        id={k}\n        key={k}\n      />\n    </li>\n  ));\n};\n\nexport const getOptions = () => {\n  const options = ['Fantasy', 'Dystopian', 'Philosophy', 'Mystery', 'Thriller',\n    'History', 'Action', 'ScienceFiction', 'Economy'];\n  return options.map((o) => (\n    <option key={o}>{o}</option>\n  ));\n};\n\nexport default generateBooks;\n","import React, { useState } from 'react';\nimport '../styles/addNewBook.css';\nimport { useDispatch } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { newBookMiddleWare } from '../redux/middlewares';\nimport { getOptions } from './utility';\n\nconst AddNewBook = () => {\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"new-book-wrapper\">\n      <h2>\n        Add new Book\n      </h2>\n      <form\n        className=\"flex\"\n        onSubmit={(e) => {\n          const category = document.querySelector('.newBookCategory').value;\n          e.preventDefault();\n          e.target.reset();\n          dispatch(newBookMiddleWare(title, author, category, uuidv4()));\n        }}\n      >\n        <input type=\"text\" className=\"newBookTitle\" placeholder=\"Book titile\" required onChange={(e) => setTitle(e.target.value)} />\n        <input type=\"text\" className=\"newBookAuthor\" placeholder=\"Author\" required onChange={(e) => setAuthor(e.target.value)} />\n        <select className=\"newBookCategory\" required>\n          {getOptions()}\n        </select>\n\n        <button type=\"submit\" className=\"submitBtn\">Add book</button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddNewBook;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport AddNewBook from './AddNewBook';\nimport { updateMiddleware } from '../redux/middlewares';\nimport generateBooks from './utility';\n\nconst Library = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(updateMiddleware());\n  }, []);\n  return (\n    <div className=\"library\">\n      <ul className=\"ulBooks\">\n        {generateBooks()}\n      </ul>\n      <AddNewBook />\n    </div>\n  );\n};\n\nexport default Library;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Categories from './Categories';\nimport Header from './Header';\nimport Library from './Library';\n\nconst App = () => (\n  <div>\n    <Header />\n    <Switch>\n      <Route exact path=\"/\">\n        <Library />\n      </Route>\n      <Route path=\"/Categories\">\n        <Categories />\n      </Route>\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport bookReducer from './books/books';\n\nconst reducers = combineReducers({\n  books: bookReducer,\n});\n\nexport default reducers;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './main';\n\nconst store = createStore(\n  reducers,\n  applyMiddleware(thunk),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './redux/configureStore';\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}